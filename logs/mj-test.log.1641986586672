INFO  00:20:27,712 - Compiling source file: D:\Treca godina\Programski Prevodioci\projekat_v2\workspace\MJCompiler\test\program.mj
INFO  00:20:27,725 - #0 program
INFO  00:20:27,725 - #22 p
INFO  00:20:27,725 - #5 const
INFO  00:20:27,726 - #22 int
INFO  00:20:27,726 - #22 size
INFO  00:20:27,726 - #37 =
INFO  00:20:27,726 - #21 10
INFO  00:20:27,726 - #40 ;
INFO  00:20:27,727 - #2 class
INFO  00:20:27,727 - #22 Table
INFO  00:20:27,727 - #48 {
INFO  00:20:27,727 - #22 int
INFO  00:20:27,727 - #22 pos
INFO  00:20:27,727 - #46 [
INFO  00:20:27,727 - #47 ]
INFO  00:20:27,727 - #42 ,
INFO  00:20:27,728 - #22 neg
INFO  00:20:27,728 - #46 [
INFO  00:20:27,728 - #47 ]
INFO  00:20:27,728 - #40 ;
INFO  00:20:27,728 - #48 {
INFO  00:20:27,729 - #13 void
INFO  00:20:27,729 - #22 putp
INFO  00:20:27,729 - #44 (
INFO  00:20:27,730 - #22 int
INFO  00:20:27,732 - #22 a
INFO  00:20:27,733 - #42 ,
INFO  00:20:27,733 - #22 int
INFO  00:20:27,733 - #22 idx
INFO  00:20:27,733 - #45 )
INFO  00:20:27,733 - #48 {
INFO  00:20:27,733 - #16 this
INFO  00:20:27,733 - #43 .
INFO  00:20:27,733 - #22 pos
INFO  00:20:27,734 - #46 [
INFO  00:20:27,734 - #22 idx
INFO  00:20:27,734 - #47 ]
INFO  00:20:27,734 - #37 =
INFO  00:20:27,734 - #22 a
INFO  00:20:27,734 - #40 ;
INFO  00:20:27,735 - #49 }
INFO  00:20:27,735 - #13 void
INFO  00:20:27,735 - #22 putn
INFO  00:20:27,735 - #44 (
INFO  00:20:27,735 - #22 int
INFO  00:20:27,736 - #22 a
INFO  00:20:27,736 - #42 ,
INFO  00:20:27,736 - #22 int
INFO  00:20:27,737 - #22 idx
INFO  00:20:27,737 - #45 )
INFO  00:20:27,737 - #48 {
INFO  00:20:27,737 - #16 this
INFO  00:20:27,737 - #43 .
INFO  00:20:27,737 - #22 neg
INFO  00:20:27,737 - #46 [
INFO  00:20:27,738 - #22 idx
INFO  00:20:27,738 - #47 ]
INFO  00:20:27,738 - #37 =
INFO  00:20:27,738 - #22 a
INFO  00:20:27,738 - #40 ;
INFO  00:20:27,738 - #49 }
INFO  00:20:27,738 - #22 int
INFO  00:20:27,738 - #22 getp
INFO  00:20:27,739 - #44 (
INFO  00:20:27,739 - #22 int
INFO  00:20:27,739 - #22 idx
INFO  00:20:27,739 - #45 )
INFO  00:20:27,739 - #48 {
INFO  00:20:27,739 - #12 return
INFO  00:20:27,740 - #22 pos
INFO  00:20:27,740 - #46 [
INFO  00:20:27,740 - #22 idx
INFO  00:20:27,740 - #47 ]
INFO  00:20:27,740 - #40 ;
INFO  00:20:27,740 - #49 }
INFO  00:20:27,740 - #22 int
INFO  00:20:27,740 - #22 getn
INFO  00:20:27,740 - #44 (
INFO  00:20:27,740 - #22 int
INFO  00:20:27,741 - #22 idx
INFO  00:20:27,741 - #45 )
INFO  00:20:27,741 - #48 {
INFO  00:20:27,741 - #12 return
INFO  00:20:27,741 - #22 neg
INFO  00:20:27,741 - #46 [
INFO  00:20:27,741 - #22 idx
INFO  00:20:27,742 - #47 ]
INFO  00:20:27,742 - #40 ;
INFO  00:20:27,742 - #49 }
INFO  00:20:27,742 - #49 }
INFO  00:20:27,743 - #49 }
INFO  00:20:27,743 - #19 record
INFO  00:20:27,743 - #22 Board
INFO  00:20:27,743 - #48 {
INFO  00:20:27,744 - #22 int
INFO  00:20:27,745 - #22 rows
INFO  00:20:27,745 - #42 ,
INFO  00:20:27,745 - #22 columns
INFO  00:20:27,746 - #40 ;
INFO  00:20:27,746 - #49 }
INFO  00:20:27,746 - #22 Table
INFO  00:20:27,747 - #22 val
INFO  00:20:27,748 - #40 ;
INFO  00:20:27,748 - #22 Board
INFO  00:20:27,748 - #22 board
INFO  00:20:27,748 - #40 ;
INFO  00:20:27,748 - #48 {
INFO  00:20:27,748 - #13 void
INFO  00:20:27,748 - #22 f
INFO  00:20:27,748 - #44 (
INFO  00:20:27,749 - #22 char
INFO  00:20:27,749 - #22 ch
INFO  00:20:27,749 - #42 ,
INFO  00:20:27,749 - #22 int
INFO  00:20:27,749 - #22 a
INFO  00:20:27,749 - #42 ,
INFO  00:20:27,749 - #22 int
INFO  00:20:27,749 - #22 arg
INFO  00:20:27,749 - #45 )
INFO  00:20:27,749 - #22 int
INFO  00:20:27,750 - #22 x
INFO  00:20:27,750 - #40 ;
INFO  00:20:27,750 - #48 {
INFO  00:20:27,750 - #22 x
INFO  00:20:27,750 - #37 =
INFO  00:20:27,750 - #22 arg
INFO  00:20:27,751 - #40 ;
INFO  00:20:27,751 - #49 }
INFO  00:20:27,752 - #13 void
INFO  00:20:27,752 - #22 main
INFO  00:20:27,752 - #44 (
INFO  00:20:27,752 - #45 )
INFO  00:20:27,753 - #22 int
INFO  00:20:27,753 - #22 x
INFO  00:20:27,757 - #42 ,
INFO  00:20:27,757 - #22 i
INFO  00:20:27,757 - #40 ;
INFO  00:20:27,757 - #22 char
INFO  00:20:27,757 - #22 c
INFO  00:20:27,757 - #40 ;
INFO  00:20:27,758 - #48 {
INFO  00:20:27,758 - #22 val
INFO  00:20:27,758 - #37 =
INFO  00:20:27,758 - #9 new
INFO  00:20:27,758 - #22 Table
INFO  00:20:27,758 - #40 ;
INFO  00:20:27,758 - #22 val
INFO  00:20:27,758 - #43 .
INFO  00:20:27,759 - #22 pos
INFO  00:20:27,759 - #37 =
INFO  00:20:27,759 - #9 new
INFO  00:20:27,759 - #22 int
INFO  00:20:27,759 - #46 [
INFO  00:20:27,760 - #22 size
INFO  00:20:27,760 - #47 ]
INFO  00:20:27,760 - #40 ;
INFO  00:20:27,760 - #22 val
INFO  00:20:27,760 - #43 .
INFO  00:20:27,760 - #22 neg
INFO  00:20:27,761 - #37 =
INFO  00:20:27,761 - #9 new
INFO  00:20:27,761 - #22 int
INFO  00:20:27,761 - #46 [
INFO  00:20:27,761 - #22 size
INFO  00:20:27,761 - #47 ]
INFO  00:20:27,761 - #40 ;
INFO  00:20:27,762 - #11 read
INFO  00:20:27,763 - #44 (
INFO  00:20:27,763 - #22 x
INFO  00:20:27,763 - #45 )
INFO  00:20:27,764 - #40 ;
INFO  00:20:27,764 - #6 if
INFO  00:20:27,764 - #44 (
INFO  00:20:27,764 - #22 x
INFO  00:20:27,765 - #31 >
INFO  00:20:27,765 - #21 5
INFO  00:20:27,765 - #45 )
INFO  00:20:27,765 - #48 {
INFO  00:20:27,765 - #18 goto
INFO  00:20:27,765 - #22 skip
INFO  00:20:27,765 - #40 ;
INFO  00:20:27,765 - #49 }
INFO  00:20:27,765 - #22 i
INFO  00:20:27,765 - #37 =
INFO  00:20:27,765 - #21 0
INFO  00:20:27,765 - #40 ;
INFO  00:20:27,765 - #7 do
INFO  00:20:27,766 - #48 {
INFO  00:20:27,766 - #22 val
INFO  00:20:27,766 - #43 .
INFO  00:20:27,766 - #22 putp
INFO  00:20:27,766 - #44 (
INFO  00:20:27,766 - #21 0
INFO  00:20:27,766 - #42 ,
INFO  00:20:27,767 - #22 i
INFO  00:20:27,767 - #45 )
INFO  00:20:27,767 - #40 ;
INFO  00:20:27,767 - #22 val
INFO  00:20:27,767 - #43 .
INFO  00:20:27,768 - #22 putn
INFO  00:20:27,768 - #44 (
INFO  00:20:27,768 - #21 0
INFO  00:20:27,768 - #42 ,
INFO  00:20:27,768 - #22 i
INFO  00:20:27,768 - #45 )
INFO  00:20:27,768 - #40 ;
INFO  00:20:27,769 - #22 i
INFO  00:20:27,769 - #38 ++
INFO  00:20:27,769 - #40 ;
INFO  00:20:27,769 - #49 }
INFO  00:20:27,769 - #8 while
INFO  00:20:27,770 - #44 (
INFO  00:20:27,770 - #22 i
INFO  00:20:27,770 - #33 <
INFO  00:20:27,770 - #22 size
INFO  00:20:27,770 - #45 )
INFO  00:20:27,770 - #40 ;
INFO  00:20:27,770 - #22 skip
INFO  00:20:27,770 - #41 :
INFO  00:20:27,770 - #22 f
INFO  00:20:27,770 - #44 (
INFO  00:20:27,771 - #22 c
INFO  00:20:27,771 - #42 ,
INFO  00:20:27,771 - #22 x
INFO  00:20:27,771 - #42 ,
INFO  00:20:27,771 - #22 i
INFO  00:20:27,771 - #45 )
INFO  00:20:27,771 - #40 ;
INFO  00:20:27,771 - #22 board
INFO  00:20:27,771 - #37 =
INFO  00:20:27,771 - #9 new
INFO  00:20:27,771 - #22 Board
INFO  00:20:27,771 - #40 ;
INFO  00:20:27,771 - #11 read
INFO  00:20:27,771 - #44 (
INFO  00:20:27,771 - #22 board
INFO  00:20:27,772 - #43 .
INFO  00:20:27,772 - #22 rows
INFO  00:20:27,772 - #45 )
INFO  00:20:27,772 - #40 ;
INFO  00:20:27,772 - #22 x
INFO  00:20:27,772 - #37 =
INFO  00:20:27,772 - #22 board
INFO  00:20:27,772 - #43 .
INFO  00:20:27,772 - #22 rows
INFO  00:20:27,773 - #40 ;
INFO  00:20:27,773 - #7 do
INFO  00:20:27,773 - #48 {
INFO  00:20:27,773 - #6 if
INFO  00:20:27,773 - #44 (
INFO  00:20:27,773 - #22 x
INFO  00:20:27,773 - #34 <=
INFO  00:20:27,773 - #21 0
INFO  00:20:27,773 - #45 )
INFO  00:20:27,773 - #1 break
INFO  00:20:27,774 - #40 ;
INFO  00:20:27,774 - #6 if
INFO  00:20:27,774 - #44 (
INFO  00:20:27,775 - #21 0
INFO  00:20:27,775 - #34 <=
INFO  00:20:27,775 - #22 x
INFO  00:20:27,775 - #35 &&
INFO  00:20:27,775 - #22 x
INFO  00:20:27,775 - #33 <
INFO  00:20:27,775 - #22 size
INFO  00:20:27,775 - #45 )
INFO  00:20:27,775 - #48 {
INFO  00:20:27,775 - #22 val
INFO  00:20:27,775 - #43 .
INFO  00:20:27,775 - #22 putp
INFO  00:20:27,775 - #44 (
INFO  00:20:27,775 - #22 val
INFO  00:20:27,776 - #43 .
INFO  00:20:27,776 - #22 getp
INFO  00:20:27,776 - #44 (
INFO  00:20:27,776 - #22 x
INFO  00:20:27,776 - #45 )
INFO  00:20:27,776 - #24 +
INFO  00:20:27,776 - #21 1
INFO  00:20:27,776 - #45 )
INFO  00:20:27,776 - #40 ;
INFO  00:20:27,776 - #49 }
INFO  00:20:27,776 - #4 else
INFO  00:20:27,776 - #6 if
INFO  00:20:27,776 - #44 (
INFO  00:20:27,777 - #25 -
INFO  00:20:27,777 - #22 size
INFO  00:20:27,777 - #33 <
INFO  00:20:27,777 - #22 x
INFO  00:20:27,777 - #35 &&
INFO  00:20:27,777 - #22 x
INFO  00:20:27,777 - #33 <
INFO  00:20:27,777 - #21 0
INFO  00:20:27,777 - #45 )
INFO  00:20:27,777 - #48 {
INFO  00:20:27,777 - #22 val
INFO  00:20:27,777 - #43 .
INFO  00:20:27,777 - #22 putn
INFO  00:20:27,777 - #44 (
INFO  00:20:27,778 - #22 val
INFO  00:20:27,778 - #43 .
INFO  00:20:27,778 - #22 getn
INFO  00:20:27,778 - #44 (
INFO  00:20:27,778 - #25 -
INFO  00:20:27,778 - #22 x
INFO  00:20:27,778 - #45 )
INFO  00:20:27,778 - #24 +
INFO  00:20:27,778 - #21 1
INFO  00:20:27,778 - #45 )
INFO  00:20:27,778 - #40 ;
INFO  00:20:27,778 - #49 }
INFO  00:20:27,778 - #11 read
INFO  00:20:27,778 - #44 (
INFO  00:20:27,778 - #22 x
INFO  00:20:27,779 - #45 )
INFO  00:20:27,779 - #40 ;
INFO  00:20:27,779 - #49 }
INFO  00:20:27,779 - #8 while
INFO  00:20:27,779 - #23 (true)
INFO  00:20:27,779 - #40 ;
INFO  00:20:27,779 - #49 }
INFO  00:20:27,779 - #49 }
