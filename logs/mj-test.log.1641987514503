INFO  12:37:20,564 - Compiling source file: D:\Treca godina\Programski Prevodioci\projekat_v2\workspace\MJCompiler\test\program.mj
INFO  12:37:20,570 - #0 program
INFO  12:37:20,570 - #22 p
INFO  12:37:20,570 - #5 const
INFO  12:37:20,570 - #22 int
INFO  12:37:20,571 - #22 size
INFO  12:37:20,571 - #37 =
INFO  12:37:20,571 - #21 10
INFO  12:37:20,571 - #40 ;
INFO  12:37:20,571 - #2 class
INFO  12:37:20,571 - #22 Table
INFO  12:37:20,571 - #48 {
INFO  12:37:20,571 - #22 int
INFO  12:37:20,571 - #22 pos
INFO  12:37:20,571 - #46 [
INFO  12:37:20,571 - #47 ]
INFO  12:37:20,571 - #42 ,
INFO  12:37:20,572 - #22 neg
INFO  12:37:20,572 - #46 [
INFO  12:37:20,572 - #47 ]
INFO  12:37:20,572 - #40 ;
INFO  12:37:20,572 - #48 {
INFO  12:37:20,573 - #13 void
INFO  12:37:20,574 - #22 putp
INFO  12:37:20,574 - #44 (
INFO  12:37:20,574 - #22 int
INFO  12:37:20,574 - #22 a
INFO  12:37:20,574 - #42 ,
INFO  12:37:20,575 - #22 int
INFO  12:37:20,575 - #22 idx
INFO  12:37:20,575 - #45 )
INFO  12:37:20,575 - #48 {
INFO  12:37:20,575 - #16 this
INFO  12:37:20,575 - #43 .
INFO  12:37:20,575 - #22 pos
INFO  12:37:20,575 - #46 [
INFO  12:37:20,575 - #22 idx
INFO  12:37:20,575 - #47 ]
INFO  12:37:20,576 - #37 =
INFO  12:37:20,576 - #22 a
INFO  12:37:20,576 - #40 ;
INFO  12:37:20,576 - #49 }
INFO  12:37:20,576 - #13 void
INFO  12:37:20,576 - #22 putn
INFO  12:37:20,576 - #44 (
INFO  12:37:20,576 - #22 int
INFO  12:37:20,576 - #22 a
INFO  12:37:20,577 - #42 ,
INFO  12:37:20,577 - #22 int
INFO  12:37:20,577 - #22 idx
INFO  12:37:20,577 - #45 )
INFO  12:37:20,577 - #48 {
INFO  12:37:20,577 - #16 this
INFO  12:37:20,577 - #43 .
INFO  12:37:20,577 - #22 neg
INFO  12:37:20,577 - #46 [
INFO  12:37:20,578 - #22 idx
INFO  12:37:20,578 - #47 ]
INFO  12:37:20,578 - #37 =
INFO  12:37:20,578 - #22 a
INFO  12:37:20,578 - #40 ;
INFO  12:37:20,578 - #49 }
INFO  12:37:20,578 - #22 int
INFO  12:37:20,578 - #22 getp
INFO  12:37:20,579 - #44 (
INFO  12:37:20,579 - #22 int
INFO  12:37:20,579 - #22 idx
INFO  12:37:20,579 - #45 )
INFO  12:37:20,579 - #48 {
INFO  12:37:20,579 - #12 return
INFO  12:37:20,579 - #22 pos
INFO  12:37:20,579 - #46 [
INFO  12:37:20,579 - #22 idx
INFO  12:37:20,579 - #47 ]
INFO  12:37:20,580 - #40 ;
INFO  12:37:20,580 - #49 }
INFO  12:37:20,580 - #22 int
INFO  12:37:20,580 - #22 getn
INFO  12:37:20,580 - #44 (
INFO  12:37:20,580 - #22 int
INFO  12:37:20,580 - #22 idx
INFO  12:37:20,580 - #45 )
INFO  12:37:20,580 - #48 {
INFO  12:37:20,580 - #12 return
INFO  12:37:20,580 - #22 neg
INFO  12:37:20,581 - #46 [
INFO  12:37:20,581 - #22 idx
INFO  12:37:20,581 - #47 ]
INFO  12:37:20,581 - #40 ;
INFO  12:37:20,581 - #49 }
INFO  12:37:20,581 - #49 }
INFO  12:37:20,581 - #49 }
INFO  12:37:20,581 - #19 record
INFO  12:37:20,581 - #22 Board
INFO  12:37:20,582 - #48 {
INFO  12:37:20,582 - #22 int
INFO  12:37:20,582 - #22 rows
INFO  12:37:20,582 - #42 ,
INFO  12:37:20,582 - #22 columns
INFO  12:37:20,582 - #40 ;
INFO  12:37:20,582 - #49 }
INFO  12:37:20,582 - #22 Table
INFO  12:37:20,582 - #22 val
INFO  12:37:20,583 - #40 ;
INFO  12:37:20,583 - #22 Board
INFO  12:37:20,583 - #22 board
INFO  12:37:20,583 - #40 ;
INFO  12:37:20,583 - #48 {
INFO  12:37:20,583 - #13 void
INFO  12:37:20,583 - #22 f
INFO  12:37:20,584 - #44 (
INFO  12:37:20,584 - #22 char
INFO  12:37:20,584 - #22 ch
INFO  12:37:20,584 - #42 ,
INFO  12:37:20,584 - #22 int
INFO  12:37:20,584 - #22 a
INFO  12:37:20,585 - #42 ,
INFO  12:37:20,585 - #22 int
INFO  12:37:20,585 - #22 arg
INFO  12:37:20,585 - #45 )
INFO  12:37:20,585 - #22 int
INFO  12:37:20,585 - #22 x
INFO  12:37:20,585 - #40 ;
INFO  12:37:20,585 - #48 {
INFO  12:37:20,586 - #22 x
INFO  12:37:20,586 - #37 =
INFO  12:37:20,586 - #22 arg
INFO  12:37:20,586 - #40 ;
INFO  12:37:20,586 - #49 }
INFO  12:37:20,587 - #13 void
INFO  12:37:20,588 - #22 main
INFO  12:37:20,588 - #44 (
INFO  12:37:20,590 - #45 )
INFO  12:37:20,591 - #22 int
INFO  12:37:20,591 - #22 x
INFO  12:37:20,598 - #42 ,
INFO  12:37:20,598 - #22 i
INFO  12:37:20,598 - #40 ;
INFO  12:37:20,598 - #22 char
INFO  12:37:20,598 - #22 c
INFO  12:37:20,598 - #40 ;
INFO  12:37:20,598 - #48 {
INFO  12:37:20,598 - #22 val
INFO  12:37:20,598 - #37 =
INFO  12:37:20,598 - #9 new
INFO  12:37:20,598 - #22 Table
INFO  12:37:20,599 - #40 ;
INFO  12:37:20,599 - #22 val
INFO  12:37:20,599 - #43 .
INFO  12:37:20,599 - #22 pos
INFO  12:37:20,599 - #37 =
INFO  12:37:20,599 - #9 new
INFO  12:37:20,599 - #22 int
INFO  12:37:20,600 - #46 [
INFO  12:37:20,600 - #22 size
INFO  12:37:20,600 - #47 ]
INFO  12:37:20,600 - #40 ;
INFO  12:37:20,601 - #22 val
INFO  12:37:20,601 - #43 .
INFO  12:37:20,601 - #22 neg
INFO  12:37:20,601 - #37 =
INFO  12:37:20,601 - #9 new
INFO  12:37:20,601 - #22 int
INFO  12:37:20,602 - #46 [
INFO  12:37:20,602 - #22 size
INFO  12:37:20,602 - #47 ]
INFO  12:37:20,602 - #40 ;
INFO  12:37:20,602 - #11 read
INFO  12:37:20,602 - #44 (
INFO  12:37:20,602 - #22 x
INFO  12:37:20,602 - #45 )
INFO  12:37:20,602 - #40 ;
INFO  12:37:20,603 - #6 if
INFO  12:37:20,603 - #44 (
INFO  12:37:20,603 - #22 x
INFO  12:37:20,603 - #31 >
INFO  12:37:20,603 - #21 5
INFO  12:37:20,603 - #45 )
INFO  12:37:20,603 - #48 {
INFO  12:37:20,603 - #18 goto
INFO  12:37:20,603 - #22 skip
INFO  12:37:20,603 - #40 ;
INFO  12:37:20,603 - #49 }
INFO  12:37:20,603 - #22 i
INFO  12:37:20,603 - #37 =
INFO  12:37:20,604 - #21 0
INFO  12:37:20,604 - #40 ;
INFO  12:37:20,604 - #7 do
INFO  12:37:20,604 - #48 {
INFO  12:37:20,604 - #22 val
INFO  12:37:20,604 - #43 .
INFO  12:37:20,604 - #22 putp
INFO  12:37:20,604 - #44 (
INFO  12:37:20,604 - #21 0
INFO  12:37:20,604 - #42 ,
INFO  12:37:20,604 - #22 i
INFO  12:37:20,605 - #45 )
INFO  12:37:20,605 - #40 ;
INFO  12:37:20,605 - #22 val
INFO  12:37:20,605 - #43 .
INFO  12:37:20,605 - #22 putn
INFO  12:37:20,605 - #44 (
INFO  12:37:20,605 - #21 0
INFO  12:37:20,605 - #42 ,
INFO  12:37:20,606 - #22 i
INFO  12:37:20,607 - #45 )
INFO  12:37:20,608 - #40 ;
INFO  12:37:20,608 - #22 i
INFO  12:37:20,608 - #38 ++
INFO  12:37:20,608 - #40 ;
INFO  12:37:20,608 - #49 }
INFO  12:37:20,608 - #8 while
INFO  12:37:20,608 - #44 (
INFO  12:37:20,608 - #22 i
INFO  12:37:20,608 - #33 <
INFO  12:37:20,608 - #22 size
INFO  12:37:20,609 - #45 )
INFO  12:37:20,609 - #40 ;
INFO  12:37:20,609 - #22 skip
INFO  12:37:20,609 - #41 :
INFO  12:37:20,609 - #22 f
INFO  12:37:20,609 - #44 (
INFO  12:37:20,609 - #22 c
INFO  12:37:20,609 - #42 ,
INFO  12:37:20,609 - #22 x
INFO  12:37:20,609 - #42 ,
INFO  12:37:20,609 - #22 i
INFO  12:37:20,610 - #45 )
INFO  12:37:20,610 - #40 ;
INFO  12:37:20,610 - #22 board
INFO  12:37:20,610 - #37 =
INFO  12:37:20,610 - #9 new
INFO  12:37:20,610 - #22 Board
INFO  12:37:20,610 - #40 ;
INFO  12:37:20,610 - #11 read
INFO  12:37:20,610 - #44 (
INFO  12:37:20,610 - #22 board
INFO  12:37:20,610 - #43 .
INFO  12:37:20,610 - #22 rows
INFO  12:37:20,610 - #45 )
INFO  12:37:20,611 - #40 ;
INFO  12:37:20,611 - #22 x
INFO  12:37:20,611 - #37 =
INFO  12:37:20,611 - #22 board
INFO  12:37:20,611 - #43 .
INFO  12:37:20,611 - #22 rows
INFO  12:37:20,611 - #40 ;
INFO  12:37:20,611 - #7 do
INFO  12:37:20,611 - #48 {
INFO  12:37:20,611 - #6 if
INFO  12:37:20,611 - #44 (
INFO  12:37:20,611 - #22 x
INFO  12:37:20,611 - #34 <=
INFO  12:37:20,612 - #21 0
INFO  12:37:20,612 - #45 )
INFO  12:37:20,612 - #1 break
INFO  12:37:20,612 - #40 ;
INFO  12:37:20,612 - #6 if
INFO  12:37:20,612 - #44 (
INFO  12:37:20,612 - #21 0
INFO  12:37:20,613 - #34 <=
INFO  12:37:20,613 - #22 x
INFO  12:37:20,613 - #35 &&
INFO  12:37:20,613 - #22 x
INFO  12:37:20,613 - #33 <
INFO  12:37:20,613 - #22 size
INFO  12:37:20,613 - #45 )
INFO  12:37:20,613 - #48 {
INFO  12:37:20,613 - #22 val
INFO  12:37:20,613 - #43 .
INFO  12:37:20,613 - #22 putp
INFO  12:37:20,613 - #44 (
INFO  12:37:20,614 - #22 val
INFO  12:37:20,614 - #43 .
INFO  12:37:20,614 - #22 getp
INFO  12:37:20,614 - #44 (
INFO  12:37:20,614 - #22 x
INFO  12:37:20,614 - #45 )
INFO  12:37:20,614 - #24 +
INFO  12:37:20,614 - #21 1
INFO  12:37:20,614 - #45 )
INFO  12:37:20,614 - #40 ;
INFO  12:37:20,614 - #49 }
INFO  12:37:20,615 - #4 else
INFO  12:37:20,615 - #6 if
INFO  12:37:20,615 - #44 (
INFO  12:37:20,615 - #25 -
INFO  12:37:20,615 - #22 size
INFO  12:37:20,615 - #33 <
INFO  12:37:20,615 - #22 x
INFO  12:37:20,615 - #35 &&
INFO  12:37:20,615 - #22 x
INFO  12:37:20,615 - #33 <
INFO  12:37:20,615 - #21 0
INFO  12:37:20,615 - #45 )
INFO  12:37:20,615 - #48 {
INFO  12:37:20,616 - #22 val
INFO  12:37:20,616 - #43 .
INFO  12:37:20,616 - #22 putn
INFO  12:37:20,616 - #44 (
INFO  12:37:20,616 - #22 val
INFO  12:37:20,616 - #43 .
INFO  12:37:20,616 - #22 getn
INFO  12:37:20,616 - #44 (
INFO  12:37:20,616 - #25 -
INFO  12:37:20,616 - #22 x
INFO  12:37:20,616 - #45 )
INFO  12:37:20,616 - #24 +
INFO  12:37:20,617 - #21 1
INFO  12:37:20,617 - #45 )
INFO  12:37:20,617 - #40 ;
INFO  12:37:20,617 - #49 }
INFO  12:37:20,617 - #11 read
INFO  12:37:20,617 - #44 (
INFO  12:37:20,617 - #22 x
INFO  12:37:20,617 - #45 )
INFO  12:37:20,617 - #40 ;
INFO  12:37:20,617 - #49 }
INFO  12:37:20,617 - #8 while
INFO  12:37:20,617 - #23 (true)
INFO  12:37:20,618 - #40 ;
INFO  12:37:20,618 - #49 }
INFO  12:37:20,618 - #49 }
