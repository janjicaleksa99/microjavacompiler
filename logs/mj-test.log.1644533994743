INFO  23:57:18,852 - Compiling source file: D:\Cetvrta godina\Programski Prevodioci\projekat_v2\workspace\MJCompiler\test\program.mj
INFO  23:57:18,909 - #2 program
INFO  23:57:18,910 - #41 test301
INFO  23:57:18,910 - #41 bool
INFO  23:57:18,911 - #41 a
INFO  23:57:18,912 - #31 ;
INFO  23:57:18,912 - #7 const
INFO  23:57:18,913 - #41 int
INFO  23:57:18,913 - #41 nula
INFO  23:57:18,913 - #28 =
INFO  23:57:18,913 - #42 0
INFO  23:57:18,913 - #31 ;
INFO  23:57:18,914 - #7 const
INFO  23:57:18,914 - #41 int
INFO  23:57:18,915 - #41 jedan
INFO  23:57:18,915 - #28 =
INFO  23:57:18,915 - #42 1
INFO  23:57:18,915 - #31 ;
INFO  23:57:18,915 - #7 const
INFO  23:57:18,915 - #41 int
INFO  23:57:18,915 - #41 pet
INFO  23:57:18,916 - #28 =
INFO  23:57:18,916 - #42 5
INFO  23:57:18,916 - #31 ;
INFO  23:57:18,916 - #41 int
INFO  23:57:18,916 - #41 b
INFO  23:57:18,916 - #31 ;
INFO  23:57:18,917 - #41 int
INFO  23:57:18,917 - #41 niz
INFO  23:57:18,917 - #37 [
INFO  23:57:18,917 - #38 ]
INFO  23:57:18,917 - #31 ;
INFO  23:57:18,917 - #41 char
INFO  23:57:18,917 - #41 nizch
INFO  23:57:18,918 - #37 [
INFO  23:57:18,918 - #38 ]
INFO  23:57:18,918 - #31 ;
INFO  23:57:18,918 - #39 {
INFO  23:57:18,918 - #15 void
INFO  23:57:18,918 - #41 main
INFO  23:57:18,918 - #35 (
INFO  23:57:18,919 - #36 )
INFO  23:57:18,919 - #41 int
INFO  23:57:18,920 - #41 bodovi
INFO  23:57:18,920 - #31 ;
INFO  23:57:18,920 - #41 int
INFO  23:57:18,921 - #41 c
INFO  23:57:18,921 - #31 ;
INFO  23:57:18,921 - #39 {
INFO  23:57:18,921 - #41 niz
INFO  23:57:18,921 - #28 =
INFO  23:57:18,923 - #11 new
INFO  23:57:18,923 - #41 int
INFO  23:57:18,923 - #37 [
INFO  23:57:18,923 - #42 4
INFO  23:57:18,923 - #38 ]
INFO  23:57:18,925 - #31 ;
INFO  23:57:18,926 - #41 niz
INFO  23:57:18,926 - #37 [
INFO  23:57:18,926 - #42 2
INFO  23:57:18,926 - #38 ]
INFO  23:57:18,927 - #28 =
INFO  23:57:18,927 - #42 5
INFO  23:57:18,927 - #31 ;
INFO  23:57:18,927 - #41 int
INFO  23:57:18,927 - #41 broj1
ERROR 23:57:18,927 - 
Sintaksna greska na liniji 21
INFO  23:57:18,928 - #31 ;
INFO  23:57:18,928 - #41 int
INFO  23:57:18,928 - #41 broj2
INFO  23:57:18,929 - #31 ;
INFO  23:57:18,929 - #41 broj1
INFO  23:57:18,929 - #28 =
INFO  23:57:18,929 - #42 1
ERROR 23:57:18,929 - Izvrsen oporavak do ; u liniji 18
INFO  23:57:18,931 - #31 ;
INFO  23:57:18,931 - #41 broj2
INFO  23:57:18,931 - #28 =
INFO  23:57:18,932 - #42 1
INFO  23:57:18,932 - #31 ;
INFO  23:57:18,932 - #41 niz
INFO  23:57:18,932 - #37 [
INFO  23:57:18,932 - #41 broj1
INFO  23:57:18,932 - #45 +
INFO  23:57:18,933 - #41 broj2
INFO  23:57:18,933 - #38 ]
INFO  23:57:18,933 - #28 =
INFO  23:57:18,934 - #41 niz
INFO  23:57:18,934 - #37 [
INFO  23:57:18,934 - #41 broj1
INFO  23:57:18,934 - #45 +
INFO  23:57:18,934 - #41 broj2
INFO  23:57:18,934 - #38 ]
INFO  23:57:18,934 - #45 +
INFO  23:57:18,934 - #42 5
INFO  23:57:18,934 - #31 ;
INFO  23:57:18,935 - #12 print
INFO  23:57:18,935 - #35 (
INFO  23:57:18,935 - #41 niz
INFO  23:57:18,935 - #37 [
INFO  23:57:18,935 - #42 2
INFO  23:57:18,935 - #38 ]
INFO  23:57:18,935 - #36 )
INFO  23:57:18,935 - #31 ;
INFO  23:57:18,935 - #40 }
INFO  23:57:18,936 - #40 }
INFO  23:57:18,950 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  DeclVar(
    DeclVar(
      DeclVar(
        DeclConst(
          DeclConst(
            DeclConst(
              DeclVar(
                NoDeclaration(
                ) [NoDeclaration]
                VarDeclaration(
                  Type(
                   bool
                  ) [Type]
                 a
                  NoVarIdentDecl(
                  ) [NoVarIdentDecl]
                ) [VarDeclaration]
              ) [DeclVar]
              NumConstDecl(
                Type(
                 int
                ) [Type]
               nula
               0
                NoConstIdentDecl(
                ) [NoConstIdentDecl]
              ) [NumConstDecl]
            ) [DeclConst]
            NumConstDecl(
              Type(
               int
              ) [Type]
             jedan
             1
              NoConstIdentDecl(
              ) [NoConstIdentDecl]
            ) [NumConstDecl]
          ) [DeclConst]
          NumConstDecl(
            Type(
             int
            ) [Type]
           pet
           5
            NoConstIdentDecl(
            ) [NoConstIdentDecl]
          ) [NumConstDecl]
        ) [DeclConst]
        VarDeclaration(
          Type(
           int
          ) [Type]
         b
          NoVarIdentDecl(
          ) [NoVarIdentDecl]
        ) [VarDeclaration]
      ) [DeclVar]
      VarArrayDecl(
        Type(
         int
        ) [Type]
       niz
        NoVarIdentDecl(
        ) [NoVarIdentDecl]
      ) [VarArrayDecl]
    ) [DeclVar]
    VarArrayDecl(
      Type(
       char
      ) [Type]
     nizch
      NoVarIdentDecl(
      ) [NoVarIdentDecl]
    ) [VarArrayDecl]
  ) [DeclVar]
  MethodDeclarations(
    MethodDeclWithRetVoid(
      MethodVoidName(
       main
      ) [MethodVoidName]
      VarDeclarations(
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          VarDeclaration(
            Type(
             int
            ) [Type]
           bodovi
            NoVarIdentDecl(
            ) [NoVarIdentDecl]
          ) [VarDeclaration]
        ) [VarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
         c
          NoVarIdentDecl(
          ) [NoVarIdentDecl]
        ) [VarDeclaration]
      ) [VarDeclarations]
      Statements(
        NoLabelSingleStmt(
          DesignStmt(
            DesignStmtAssignExpr(
              DesignAssignStatement(
                Designator(
                  DesignName(
                   niz
                  ) [DesignName]
                  NoArrayAccess(
                  ) [NoArrayAccess]
                ) [Designator]
                Assignop(
                ) [Assignop]
                SingleTerm(
                  TermPositive(
                    Term(
                      FactorNewExpr(
                        Type(
                         int
                        ) [Type]
                        SingleTerm(
                          TermPositive(
                            Term(
                              FactorNumConst(
                               4
                              ) [FactorNumConst]
                              NoMulopFactor(
                              ) [NoMulopFactor]
                            ) [Term]
                          ) [TermPositive]
                        ) [SingleTerm]
                      ) [FactorNewExpr]
                      NoMulopFactor(
                      ) [NoMulopFactor]
                    ) [Term]
                  ) [TermPositive]
                ) [SingleTerm]
              ) [DesignAssignStatement]
            ) [DesignStmtAssignExpr]
          ) [DesignStmt]
        ) [NoLabelSingleStmt]
        StmtList(
          StmtList(
            StmtList(
              StmtList(
                StmtList(
                  StmtList(
                    NoStmt(
                    ) [NoStmt]
                    NoLabelSingleStmt(
                      DesignStmt(
                        DesignStmtAssignExpr(
                          DesignAssignStatement(
                            Designator(
                              DesignName(
                               niz
                              ) [DesignName]
                              ArrayAcc(
                                SingleTerm(
                                  TermPositive(
                                    Term(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                      NoMulopFactor(
                                      ) [NoMulopFactor]
                                    ) [Term]
                                  ) [TermPositive]
                                ) [SingleTerm]
                              ) [ArrayAcc]
                            ) [Designator]
                            Assignop(
                            ) [Assignop]
                            SingleTerm(
                              TermPositive(
                                Term(
                                  FactorNumConst(
                                   5
                                  ) [FactorNumConst]
                                  NoMulopFactor(
                                  ) [NoMulopFactor]
                                ) [Term]
                              ) [TermPositive]
                            ) [SingleTerm]
                          ) [DesignAssignStatement]
                        ) [DesignStmtAssignExpr]
                      ) [DesignStmt]
                    ) [NoLabelSingleStmt]
                  ) [StmtList]
                  NoLabelSingleStmt(
                    DesignStmt(
                      DesignStmtAssignExpr(
                        DesignatorAssignStatementDerived1(
                        ) [DesignatorAssignStatementDerived1]
                      ) [DesignStmtAssignExpr]
                    ) [DesignStmt]
                  ) [NoLabelSingleStmt]
                ) [StmtList]
                NoLabelSingleStmt(
                  DesignStmt(
                    DesignStmtAssignExpr(
                      DesignAssignStatement(
                        Designator(
                          DesignName(
                           broj1
                          ) [DesignName]
                          NoArrayAccess(
                          ) [NoArrayAccess]
                        ) [Designator]
                        Assignop(
                        ) [Assignop]
                        SingleTerm(
                          TermPositive(
                            Term(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                              NoMulopFactor(
                              ) [NoMulopFactor]
                            ) [Term]
                          ) [TermPositive]
                        ) [SingleTerm]
                      ) [DesignAssignStatement]
                    ) [DesignStmtAssignExpr]
                  ) [DesignStmt]
                ) [NoLabelSingleStmt]
              ) [StmtList]
              NoLabelSingleStmt(
                DesignStmt(
                  DesignStmtAssignExpr(
                    DesignAssignStatement(
                      Designator(
                        DesignName(
                         broj2
                        ) [DesignName]
                        NoArrayAccess(
                        ) [NoArrayAccess]
                      ) [Designator]
                      Assignop(
                      ) [Assignop]
                      SingleTerm(
                        TermPositive(
                          Term(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                            NoMulopFactor(
                            ) [NoMulopFactor]
                          ) [Term]
                        ) [TermPositive]
                      ) [SingleTerm]
                    ) [DesignAssignStatement]
                  ) [DesignStmtAssignExpr]
                ) [DesignStmt]
              ) [NoLabelSingleStmt]
            ) [StmtList]
            NoLabelSingleStmt(
              DesignStmt(
                DesignStmtAssignExpr(
                  DesignAssignStatement(
                    Designator(
                      DesignName(
                       niz
                      ) [DesignName]
                      ArrayAcc(
                        AddOpExpression(
                          SingleTerm(
                            TermPositive(
                              Term(
                                FactorDesignator(
                                  Designator(
                                    DesignName(
                                     broj1
                                    ) [DesignName]
                                    NoArrayAccess(
                                    ) [NoArrayAccess]
                                  ) [Designator]
                                ) [FactorDesignator]
                                NoMulopFactor(
                                ) [NoMulopFactor]
                              ) [Term]
                            ) [TermPositive]
                          ) [SingleTerm]
                          Additon(
                           +
                          ) [Additon]
                          Term(
                            FactorDesignator(
                              Designator(
                                DesignName(
                                 broj2
                                ) [DesignName]
                                NoArrayAccess(
                                ) [NoArrayAccess]
                              ) [Designator]
                            ) [FactorDesignator]
                            NoMulopFactor(
                            ) [NoMulopFactor]
                          ) [Term]
                        ) [AddOpExpression]
                      ) [ArrayAcc]
                    ) [Designator]
                    Assignop(
                    ) [Assignop]
                    AddOpExpression(
                      SingleTerm(
                        TermPositive(
                          Term(
                            FactorDesignator(
                              Designator(
                                DesignName(
                                 niz
                                ) [DesignName]
                                ArrayAcc(
                                  AddOpExpression(
                                    SingleTerm(
                                      TermPositive(
                                        Term(
                                          FactorDesignator(
                                            Designator(
                                              DesignName(
                                               broj1
                                              ) [DesignName]
                                              NoArrayAccess(
                                              ) [NoArrayAccess]
                                            ) [Designator]
                                          ) [FactorDesignator]
                                          NoMulopFactor(
                                          ) [NoMulopFactor]
                                        ) [Term]
                                      ) [TermPositive]
                                    ) [SingleTerm]
                                    Additon(
                                     +
                                    ) [Additon]
                                    Term(
                                      FactorDesignator(
                                        Designator(
                                          DesignName(
                                           broj2
                                          ) [DesignName]
                                          NoArrayAccess(
                                          ) [NoArrayAccess]
                                        ) [Designator]
                                      ) [FactorDesignator]
                                      NoMulopFactor(
                                      ) [NoMulopFactor]
                                    ) [Term]
                                  ) [AddOpExpression]
                                ) [ArrayAcc]
                              ) [Designator]
                            ) [FactorDesignator]
                            NoMulopFactor(
                            ) [NoMulopFactor]
                          ) [Term]
                        ) [TermPositive]
                      ) [SingleTerm]
                      Additon(
                       +
                      ) [Additon]
                      Term(
                        FactorNumConst(
                         5
                        ) [FactorNumConst]
                        NoMulopFactor(
                        ) [NoMulopFactor]
                      ) [Term]
                    ) [AddOpExpression]
                  ) [DesignAssignStatement]
                ) [DesignStmtAssignExpr]
              ) [DesignStmt]
            ) [NoLabelSingleStmt]
          ) [StmtList]
          NoLabelSingleStmt(
            PrintExprStmt(
              SingleTerm(
                TermPositive(
                  Term(
                    FactorDesignator(
                      Designator(
                        DesignName(
                         niz
                        ) [DesignName]
                        ArrayAcc(
                          SingleTerm(
                            TermPositive(
                              Term(
                                FactorNumConst(
                                 2
                                ) [FactorNumConst]
                                NoMulopFactor(
                                ) [NoMulopFactor]
                              ) [Term]
                            ) [TermPositive]
                          ) [SingleTerm]
                        ) [ArrayAcc]
                      ) [Designator]
                    ) [FactorDesignator]
                    NoMulopFactor(
                    ) [NoMulopFactor]
                  ) [Term]
                ) [TermPositive]
              ) [SingleTerm]
            ) [PrintExprStmt]
          ) [NoLabelSingleStmt]
        ) [StmtList]
      ) [Statements]
    ) [MethodDeclWithRetVoid]
    NoMethodDecl(
    ) [NoMethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:57:18,951 - ===================================
INFO  23:57:18,955 - Obradjuje se funkcija main na liniji 15
INFO  23:57:18,955 - Pretraga na 19(niz) nadjeno Var niz: Arr of int, 2, 0
INFO  23:57:18,955 - Pretraga na 20(niz) nadjeno Var niz: Arr of int, 2, 0
ERROR 23:57:18,956 - Greska na 23 (broj1) nije nadjeno na liniji 23
ERROR 23:57:18,956 - Tip izraza na 23 nije jednak tipu designatora
ERROR 23:57:18,956 - Greska na 24 (broj2) nije nadjeno na liniji 24
ERROR 23:57:18,956 - Tip izraza na 24 nije jednak tipu designatora
INFO  23:57:18,956 - Pretraga na 25(niz) nadjeno Var niz: Arr of int, 2, 0
ERROR 23:57:18,956 - Greska na 25 (broj1) nije nadjeno na liniji 25
ERROR 23:57:18,956 - Greska na 25 (broj2) nije nadjeno na liniji 25
ERROR 23:57:18,956 - Greska: Sabiranje i oduzimanje je moguce samo sa int tipom na liniji 25
ERROR 23:57:18,957 - Tip izraza u indeksu nije celobrojnog tipa na liniji 25
INFO  23:57:18,957 - Pretraga na 25(niz) nadjeno Var niz: Arr of int, 2, 0
ERROR 23:57:18,957 - Greska na 25 (broj1) nije nadjeno na liniji 25
ERROR 23:57:18,957 - Greska na 25 (broj2) nije nadjeno na liniji 25
ERROR 23:57:18,957 - Greska: Sabiranje i oduzimanje je moguce samo sa int tipom na liniji 25
ERROR 23:57:18,957 - Tip izraza u indeksu nije celobrojnog tipa na liniji 25
INFO  23:57:18,957 - Pretraga na 26(niz) nadjeno Var niz: Arr of int, 2, 0
INFO  23:57:18,959 - Sintaksna i semanticka analiza nije uspesno zavrsena!
