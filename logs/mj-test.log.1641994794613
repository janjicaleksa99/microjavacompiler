INFO  14:36:11,411 - Compiling source file: D:\Treca godina\Programski Prevodioci\projekat_v2\workspace\MJCompiler\test\program.mj
INFO  14:36:11,477 - #0 program
INFO  14:36:11,477 - #22 p
INFO  14:36:11,478 - #5 const
INFO  14:36:11,478 - #22 int
INFO  14:36:11,478 - #22 size
INFO  14:36:11,478 - #37 =
INFO  14:36:11,478 - #21 10
INFO  14:36:11,478 - #40 ;
INFO  14:36:11,478 - #2 class
INFO  14:36:11,479 - #22 Table
INFO  14:36:11,479 - #48 {
INFO  14:36:11,479 - #22 int
INFO  14:36:11,479 - #22 pos
INFO  14:36:11,479 - #46 [
INFO  14:36:11,479 - #47 ]
INFO  14:36:11,479 - #42 ,
INFO  14:36:11,479 - #22 neg
INFO  14:36:11,479 - #46 [
INFO  14:36:11,479 - #47 ]
INFO  14:36:11,480 - #40 ;
INFO  14:36:11,480 - #48 {
INFO  14:36:11,481 - #13 void
INFO  14:36:11,481 - #22 putp
INFO  14:36:11,481 - #44 (
INFO  14:36:11,481 - #22 int
INFO  14:36:11,481 - #22 a
INFO  14:36:11,481 - #42 ,
INFO  14:36:11,481 - #22 int
INFO  14:36:11,481 - #22 idx
INFO  14:36:11,482 - #45 )
INFO  14:36:11,482 - #48 {
INFO  14:36:11,482 - #16 this
INFO  14:36:11,482 - #43 .
INFO  14:36:11,482 - #22 pos
INFO  14:36:11,482 - #46 [
INFO  14:36:11,482 - #22 idx
INFO  14:36:11,482 - #47 ]
INFO  14:36:11,482 - #37 =
INFO  14:36:11,482 - #22 a
INFO  14:36:11,483 - #40 ;
INFO  14:36:11,483 - #49 }
INFO  14:36:11,483 - #13 void
INFO  14:36:11,483 - #22 putn
INFO  14:36:11,483 - #44 (
INFO  14:36:11,483 - #22 int
INFO  14:36:11,483 - #22 a
INFO  14:36:11,483 - #42 ,
INFO  14:36:11,483 - #22 int
INFO  14:36:11,483 - #22 idx
INFO  14:36:11,484 - #45 )
INFO  14:36:11,484 - #48 {
INFO  14:36:11,484 - #16 this
INFO  14:36:11,484 - #43 .
INFO  14:36:11,484 - #22 neg
INFO  14:36:11,484 - #46 [
INFO  14:36:11,484 - #22 idx
INFO  14:36:11,484 - #47 ]
INFO  14:36:11,484 - #37 =
INFO  14:36:11,485 - #22 a
INFO  14:36:11,485 - #40 ;
INFO  14:36:11,485 - #49 }
INFO  14:36:11,485 - #22 int
INFO  14:36:11,485 - #22 getp
INFO  14:36:11,485 - #44 (
INFO  14:36:11,485 - #22 int
INFO  14:36:11,485 - #22 idx
INFO  14:36:11,486 - #45 )
INFO  14:36:11,486 - #48 {
INFO  14:36:11,486 - #12 return
INFO  14:36:11,486 - #22 pos
INFO  14:36:11,486 - #46 [
INFO  14:36:11,486 - #22 idx
INFO  14:36:11,486 - #47 ]
INFO  14:36:11,486 - #40 ;
INFO  14:36:11,486 - #49 }
INFO  14:36:11,487 - #22 int
INFO  14:36:11,487 - #22 getn
INFO  14:36:11,487 - #44 (
INFO  14:36:11,487 - #22 int
INFO  14:36:11,487 - #22 idx
INFO  14:36:11,487 - #45 )
INFO  14:36:11,487 - #48 {
INFO  14:36:11,487 - #12 return
INFO  14:36:11,488 - #22 neg
INFO  14:36:11,488 - #46 [
INFO  14:36:11,488 - #22 idx
INFO  14:36:11,488 - #47 ]
INFO  14:36:11,488 - #40 ;
INFO  14:36:11,488 - #49 }
INFO  14:36:11,488 - #49 }
INFO  14:36:11,488 - #49 }
INFO  14:36:11,488 - #19 record
INFO  14:36:11,489 - #22 Board
INFO  14:36:11,489 - #48 {
INFO  14:36:11,489 - #22 int
INFO  14:36:11,489 - #22 rows
INFO  14:36:11,489 - #42 ,
INFO  14:36:11,489 - #22 columns
INFO  14:36:11,489 - #40 ;
INFO  14:36:11,489 - #49 }
INFO  14:36:11,489 - #22 Table
INFO  14:36:11,490 - #22 val
INFO  14:36:11,490 - #40 ;
INFO  14:36:11,490 - #22 Board
INFO  14:36:11,490 - #22 board
INFO  14:36:11,490 - #40 ;
INFO  14:36:11,490 - #48 {
INFO  14:36:11,490 - #13 void
INFO  14:36:11,490 - #22 f
INFO  14:36:11,490 - #44 (
INFO  14:36:11,490 - #22 char
INFO  14:36:11,490 - #22 ch
INFO  14:36:11,491 - #42 ,
INFO  14:36:11,491 - #22 int
INFO  14:36:11,491 - #22 a
INFO  14:36:11,491 - #42 ,
INFO  14:36:11,491 - #22 int
INFO  14:36:11,491 - #22 arg
INFO  14:36:11,491 - #45 )
INFO  14:36:11,491 - #22 int
INFO  14:36:11,491 - #22 x
INFO  14:36:11,491 - #40 ;
INFO  14:36:11,491 - #48 {
INFO  14:36:11,492 - #22 x
INFO  14:36:11,492 - #37 =
INFO  14:36:11,492 - #22 arg
INFO  14:36:11,492 - #40 ;
INFO  14:36:11,492 - #49 }
INFO  14:36:11,492 - #13 void
INFO  14:36:11,492 - #22 main
INFO  14:36:11,492 - #44 (
INFO  14:36:11,492 - #45 )
INFO  14:36:11,493 - #22 int
INFO  14:36:11,493 - #22 x
INFO  14:36:11,493 - #42 ,
INFO  14:36:11,493 - #22 i
INFO  14:36:11,493 - #40 ;
INFO  14:36:11,493 - #22 char
INFO  14:36:11,493 - #22 c
INFO  14:36:11,493 - #40 ;
INFO  14:36:11,493 - #48 {
INFO  14:36:11,493 - #22 val
INFO  14:36:11,493 - #37 =
INFO  14:36:11,493 - #9 new
INFO  14:36:11,494 - #22 Table
INFO  14:36:11,494 - #40 ;
INFO  14:36:11,494 - #22 val
INFO  14:36:11,494 - #43 .
INFO  14:36:11,494 - #22 pos
INFO  14:36:11,494 - #37 =
INFO  14:36:11,494 - #9 new
INFO  14:36:11,494 - #22 int
INFO  14:36:11,494 - #46 [
INFO  14:36:11,494 - #22 size
INFO  14:36:11,494 - #47 ]
INFO  14:36:11,494 - #40 ;
INFO  14:36:11,495 - #22 val
INFO  14:36:11,495 - #43 .
INFO  14:36:11,495 - #22 neg
INFO  14:36:11,495 - #37 =
INFO  14:36:11,495 - #9 new
INFO  14:36:11,495 - #22 int
INFO  14:36:11,495 - #46 [
INFO  14:36:11,495 - #22 size
INFO  14:36:11,495 - #47 ]
INFO  14:36:11,495 - #40 ;
INFO  14:36:11,495 - #11 read
INFO  14:36:11,495 - #44 (
INFO  14:36:11,495 - #22 x
INFO  14:36:11,496 - #45 )
INFO  14:36:11,496 - #40 ;
INFO  14:36:11,496 - #6 if
INFO  14:36:11,496 - #44 (
INFO  14:36:11,496 - #22 x
INFO  14:36:11,496 - #31 >
INFO  14:36:11,496 - #21 5
INFO  14:36:11,496 - #45 )
INFO  14:36:11,496 - #48 {
INFO  14:36:11,496 - #18 goto
INFO  14:36:11,496 - #22 skip
INFO  14:36:11,496 - #40 ;
INFO  14:36:11,496 - #49 }
INFO  14:36:11,496 - #22 i
INFO  14:36:11,497 - #37 =
INFO  14:36:11,497 - #21 0
INFO  14:36:11,497 - #40 ;
INFO  14:36:11,497 - #7 do
INFO  14:36:11,497 - #48 {
INFO  14:36:11,497 - #22 val
INFO  14:36:11,497 - #43 .
INFO  14:36:11,497 - #22 putp
INFO  14:36:11,497 - #44 (
INFO  14:36:11,497 - #21 0
INFO  14:36:11,497 - #42 ,
INFO  14:36:11,497 - #22 i
INFO  14:36:11,497 - #45 )
INFO  14:36:11,498 - #40 ;
INFO  14:36:11,498 - #22 val
INFO  14:36:11,501 - #43 .
INFO  14:36:11,501 - #22 putn
INFO  14:36:11,501 - #44 (
INFO  14:36:11,502 - #21 0
INFO  14:36:11,502 - #42 ,
INFO  14:36:11,502 - #22 i
INFO  14:36:11,502 - #45 )
INFO  14:36:11,502 - #40 ;
INFO  14:36:11,502 - #22 i
INFO  14:36:11,502 - #38 ++
INFO  14:36:11,502 - #40 ;
INFO  14:36:11,502 - #49 }
INFO  14:36:11,502 - #8 while
INFO  14:36:11,502 - #44 (
INFO  14:36:11,502 - #22 i
INFO  14:36:11,503 - #33 <
INFO  14:36:11,503 - #22 size
INFO  14:36:11,503 - #45 )
INFO  14:36:11,503 - #40 ;
INFO  14:36:11,503 - #22 skip
INFO  14:36:11,503 - #41 :
INFO  14:36:11,503 - #22 f
INFO  14:36:11,503 - #44 (
INFO  14:36:11,503 - #22 c
INFO  14:36:11,504 - #42 ,
INFO  14:36:11,504 - #22 x
INFO  14:36:11,504 - #42 ,
INFO  14:36:11,504 - #22 i
INFO  14:36:11,504 - #45 )
INFO  14:36:11,504 - #40 ;
INFO  14:36:11,504 - #22 board
INFO  14:36:11,504 - #37 =
INFO  14:36:11,504 - #9 new
INFO  14:36:11,504 - #22 Board
INFO  14:36:11,504 - #40 ;
INFO  14:36:11,504 - #11 read
INFO  14:36:11,504 - #44 (
INFO  14:36:11,505 - #22 board
INFO  14:36:11,505 - #43 .
INFO  14:36:11,505 - #22 rows
INFO  14:36:11,505 - #45 )
INFO  14:36:11,505 - #40 ;
INFO  14:36:11,505 - #22 x
INFO  14:36:11,505 - #37 =
INFO  14:36:11,505 - #22 board
INFO  14:36:11,505 - #43 .
INFO  14:36:11,505 - #22 rows
INFO  14:36:11,505 - #40 ;
INFO  14:36:11,505 - #7 do
INFO  14:36:11,505 - #48 {
INFO  14:36:11,505 - #6 if
INFO  14:36:11,506 - #44 (
INFO  14:36:11,506 - #22 x
INFO  14:36:11,506 - #34 <=
INFO  14:36:11,506 - #21 0
INFO  14:36:11,506 - #45 )
INFO  14:36:11,506 - #1 break
INFO  14:36:11,506 - #40 ;
INFO  14:36:11,507 - #6 if
INFO  14:36:11,507 - #44 (
INFO  14:36:11,507 - #21 0
INFO  14:36:11,507 - #34 <=
INFO  14:36:11,507 - #22 x
INFO  14:36:11,507 - #35 &&
INFO  14:36:11,507 - #22 x
INFO  14:36:11,507 - #33 <
INFO  14:36:11,507 - #22 size
INFO  14:36:11,507 - #45 )
INFO  14:36:11,507 - #48 {
INFO  14:36:11,508 - #22 val
INFO  14:36:11,508 - #43 .
INFO  14:36:11,508 - #22 putp
INFO  14:36:11,508 - #44 (
INFO  14:36:11,508 - #22 val
INFO  14:36:11,508 - #43 .
INFO  14:36:11,508 - #22 getp
INFO  14:36:11,508 - #44 (
INFO  14:36:11,508 - #22 x
INFO  14:36:11,508 - #45 )
INFO  14:36:11,508 - #24 +
INFO  14:36:11,508 - #21 1
INFO  14:36:11,509 - #45 )
INFO  14:36:11,509 - #40 ;
INFO  14:36:11,509 - #49 }
INFO  14:36:11,509 - #4 else
INFO  14:36:11,509 - #6 if
INFO  14:36:11,509 - #44 (
INFO  14:36:11,509 - #25 -
INFO  14:36:11,509 - #22 size
INFO  14:36:11,509 - #33 <
INFO  14:36:11,509 - #22 x
INFO  14:36:11,509 - #35 &&
INFO  14:36:11,510 - #22 x
INFO  14:36:11,510 - #33 <
INFO  14:36:11,510 - #21 0
INFO  14:36:11,510 - #45 )
INFO  14:36:11,510 - #48 {
INFO  14:36:11,510 - #22 val
INFO  14:36:11,510 - #43 .
INFO  14:36:11,510 - #22 putn
INFO  14:36:11,510 - #44 (
INFO  14:36:11,510 - #22 val
INFO  14:36:11,510 - #43 .
INFO  14:36:11,510 - #22 getn
INFO  14:36:11,510 - #44 (
INFO  14:36:11,510 - #25 -
INFO  14:36:11,510 - #22 x
INFO  14:36:11,511 - #45 )
INFO  14:36:11,511 - #24 +
INFO  14:36:11,511 - #21 1
INFO  14:36:11,511 - #45 )
INFO  14:36:11,511 - #40 ;
INFO  14:36:11,511 - #49 }
INFO  14:36:11,511 - #11 read
INFO  14:36:11,511 - #44 (
INFO  14:36:11,511 - #22 x
INFO  14:36:11,511 - #45 )
INFO  14:36:11,511 - #40 ;
INFO  14:36:11,511 - #49 }
INFO  14:36:11,511 - #8 while
INFO  14:36:11,512 - #23 (true)
INFO  14:36:11,512 - #40 ;
INFO  14:36:11,512 - #49 }
INFO  14:36:11,512 - #49 }
